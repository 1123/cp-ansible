- hosts: zookeeper:kafka:schema_registry:kafka_connect:ksql:control_center:kafka_rest
  tags:
    - always
  tasks:
  - import_role:
      name: confluent.common
  - import_role:
      name: confluent.kerberos
    when: security_mode == "kerberos" or security_mode == "kerberos_ssl" or security_mode == "kerberos_ssl_customcerts"

# Rrun the cert generation on the first zookeeper instance, which has java
- hosts: zookeeper[0]
  gather_facts: no
  tags:
    - always
  tasks:
  - import_role:
      name: confluent.ssl_customcerts
    when: security_mode == "kerberos_ssl_customcerts" or security_mode == "ssl_customcerts"
  - import_role:
      name: confluent.ssl_CA
    when: security_mode == "ssl" or security_mode == "sasl_ssl" or security_mode == "kerberos_ssl"

- hosts: zookeeper
  gather_facts: no
  tags:
    - zookeeper
  tasks:
  - import_role:
      name: confluent.zookeeper

- hosts: kafka
  gather_facts: no
  tags:
    - kafka
  tasks:
  - import_role:
      name: confluent.kafka

- hosts: schema_registry
  gather_facts: no
  tags:
    - schema_registry
  tasks:
  - import_role:
      name: confluent.schema_registry

- hosts: kafka_connect
  gather_facts: no
  tags:
    - kafka_connect
  tasks:
  - import_role:
      name: confluent.kafka_connect

- hosts: ksql
  gather_facts: no
  tags:
    - ksql
  tasks:
  - import_role:
      name: confluent.ksql

- hosts: control_center
  gather_facts: no
  tags:
    - control_center
  tasks:
  - import_role:
      name: confluent.control_center

- hosts: kafka_rest
  gather_facts: no
  tags:
    - kafka_rest
  tasks:
  - import_role:
      name: confluent.kafka_rest
