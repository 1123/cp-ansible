---
- name: Create Secrets Protection Directory
  file:
    path: /var/ssl/private/
    state: directory
    mode: 0755

- name: Copy security.properties file to Host
  copy:
    src: "{{ secrets_protection_security_file }}"
    dest: "/var/ssl/private/security.properties"

- name: Load server.properties
  slurp:
    src: generated_ssl_files/masterkey
  delegate_to: localhost
  vars:
    ansible_connection: local
    ansible_become: false
  register: slurped_masterkey
  when: not secrets_protection_masterkey

- name: Save Master Encryption Key
  set_fact:
    secrets_protection_masterkey: "{{ slurped_masterkey.content|b64decode}}"
  when: not secrets_protection_masterkey

- name: Encrypt All Properties that Contain 'password'
  shell: |
    {{ confluent_cli_path }} secret file encrypt --config-file {{ config_path }} \
      --local-secrets-file {{secrets_file}} \
      --remote-secrets-file {{secrets_file}}
  environment:
    CONFLUENT_SECURITY_MASTER_KEY: "{{ secrets_protection_masterkey }}"
  when: encrypt_passwords|bool

- name: Encrypt Selected Properties
  shell: |
    {{ confluent_cli_path }} secret file encrypt --config-file {{ config_path }} \
      --local-secrets-file {{secrets_file}} \
      --remote-secrets-file {{secrets_file}} \
      --config {{ item }}
  loop: "{{ properties }}"
  environment:
    CONFLUENT_SECURITY_MASTER_KEY: "{{ secrets_protection_masterkey }}"
  when: properties|length>0

- name: Set Ownership on Secrets File
  file:
    path: "{{secrets_file}}"
    owner: "{{secrets_file_owner}}"
    group: "{{secrets_file_group}}"
    mode: 0640
