---
driver:
  name: docker
platforms:
  - name: ldap1
    hostname: ldap1.confluent
    groups:
      - ldap_server
    image: geerlingguy/docker-centos7-ansible
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: zookeeper1
    hostname: zookeeper1.confluent
    groups:
      - zookeeper
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker2
    hostname: kafka-broker2.confluent
    groups:
      - kafka_broker
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker3
    hostname: kafka-broker3.confluent
    groups:
      - kafka_broker
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: schema-registry1
    hostname: schema-registry1.confluent
    groups:
      - schema_registry
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-rest1
    hostname: kafka-rest1.confluent
    groups:
      - kafka_rest
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-connect1
    hostname: kafka-connect1.confluent
    groups:
      - kafka_connect
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ksql1
    hostname: ksql1.confluent
    groups:
      - ksql
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: control-center1
    hostname: control-center1.confluent
    groups:
      - control_center
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    published_ports:
      - "9021:9021"
    networks:
      - name: confluent
provisioner:
  name: ansible
  config_options:
    defaults:
      hash_behaviour: merge
  inventory:
    group_vars:
      all:
        ssl_enabled: true
        ssl_mutual_auth_enabled: true

        ssl_custom_certs: true
        ssl_ca_cert_filepath: generated_ssl_files/ca.crt
        ssl_signed_cert_filepath: "generated_ssl_files/{{inventory_hostname}}-ca1-signed.crt"
        ssl_key_filepath: "generated_ssl_files/{{inventory_hostname}}-key.pem"
        ssl_key_password: keypass

        rbac_enabled: true
        mds_ssl_mutual_auth_enabled: false

        # There are two $$ when there normally is one: https://github.com/ansible-community/molecule/issues/993
        # Having trouble w the principal mapping

        # TODO fix these
        token_services_public_pem_file: generated_ssl_files/public.pem
        token_services_private_pem_file: generated_ssl_files/tokenKeypair.pem

        mds_super_user: mds
        mds_super_user_password: password

        rbac_ldaps: false
        rbac_ldap_url: ldap1
        rbac_ldap_port: 389
        rbac_ldap_principal: mds
        rbac_ldap_princiapl_password: password
        rbac_ldap_user_search_base: OU=rbac,DC=example,DC=com
        rbac_ldap_group_search_base: OU=rbac,DC=example,DC=com

        kafka_broker_custom_listeners:
          client_listener:
            name: Token
            port: 9093
            ssl_enabled: true
            ssl_mutual_auth_enabled: true
            sasl_protocol: OAUTH

        # rbac_principal_name: "{{inventory_hostname}}"
        rbac_principal_password: password

      kafka_broker:
        rbac_principal_name: kafka_broker
      schema_registry:
        rbac_principal_name: schema_registry
      kafka_connect:
        rbac_principal_name: kafka_connect
      kafka_rest:
        rbac_principal_name: kafka_rest
      ksql:
        rbac_principal_name: ksql
      control_center:
        rbac_principal_name: control_center


      ldap_server:
        ldaps_enabled: false
        ldaps_custom_certs: false

        ldap_admin_password: ldppassword

        ldap_rbac_group: rbac
        ldap_dc: example
        ldap_dc_extension: com

        ldap_users:
          - username: kafka_broker
            password: password
            uid: 9999
            guid: 99
          - username: schema_registry
            password: password
            uid: 9998
            guid: 98
          - username: kafka_connect
            password: password
            uid: 9997
            guid: 97
          - username: ksql
            password: password
            uid: 9996
            guid: 96
          - username: control_center
            password: password
            uid: 9995
            guid: 95
          - username: kafka_rest
            password: password
            uid: 9994
            guid: 94
          - username: mds
            password: password
            uid: 9993
            guid: 93
verifier:
  name: ansible
scenario:
  test_sequence:
    - lint
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    # - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy
