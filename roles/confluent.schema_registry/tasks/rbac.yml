---
- name: RBAC Setup Tasks
  include_tasks: ../../tasks/rbac_setup.yml
  vars:
    user: "{{schema_registry_user}}"
    group: "{{schema_registry_group}}"

# - set_fact:
#     certificate_args: ""
#   when: not mds_ssl_enabled|bool
#
# - set_fact:
#     certificate_args: "--cacert {{schema_registry_ca_cert_path}}"
#   when: mds_ssl_enabled|bool

# TODO switch to uri
# - name: Grant role System Admin to Additional Schema Registry Super Users
#   shell: |
#     curl -X POST {{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{item}}/roles/SystemAdmin \
#       -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
#       -d '{"clusters":{"kafka-cluster": "{{kafka_cluster_id}}", "schema-registry-cluster": "{{schema_registry.properties['schema.registry.group.id']}}"}}"'
#   loop: "{{schema_registry_additional_system_admins}}"

- name: Grant role System Admin to Additional Schema Registry Super Users
  uri:
    url: "{{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{item}}/roles/SystemAdmin"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "clusters": {
          "kafka-cluster": "{{kafka_cluster_id}}",
          "schema-registry-cluster": "{{schema_registry.properties['schema.registry.group.id']}}"
        }
      }
    status_code: 204
  loop: "{{schema_registry_additional_system_admins}}"

# - name: Grant Schema Registry user the role SecurityAdmin on the Schema Registry cluster.
#   shell: |
#     curl -X POST {{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{schema_registry_ldap_user}}/roles/SecurityAdmin \
#       -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
#       -d '{"clusters":{"kafka-cluster": "{{kafka_cluster_id}}", "schema-registry-cluster": "{{schema_registry.properties['schema.registry.group.id']}}"}}"'

- name: Grant Schema Registry user the role SecurityAdmin on the Schema Registry cluster
  uri:
    url: "{{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{schema_registry_ldap_user}}/roles/SecurityAdmin"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "clusters": {
          "kafka-cluster": "{{kafka_cluster_id}}",
          "schema-registry-cluster": "{{schema_registry.properties['schema.registry.group.id']}}"
        }
      }
    status_code: 204

# - name: Grant Schema Registry user ResourceOwner on the group that Schema Registry nodes use to coordinate across the cluster
#   shell: |
#     curl -X POST {{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{schema_registry_ldap_user}}/roles/ResourceOwner/bindings \
#       -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
#       -d '{"scope":{"clusters":{"kafka-cluster": "{{kafka_cluster_id}}"}}, "resourcePatterns":[{"resourceType":"Group","name": "{{schema_registry.properties['schema.registry.group.id']}}","patternType":"LITERAL"}]}'

- name: Grant Schema Registry user ResourceOwner on the group that Schema Registry nodes use to coordinate across the cluster
  uri:
    url: "{{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{schema_registry_ldap_user}}/roles/ResourceOwner/bindings"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "scope": {
          "clusters": {
            "kafka-cluster": "{{kafka_cluster_id}}"}},
            "resourcePatterns": [{
              "resourceType":"Group",
              "name": "{{schema_registry.properties['schema.registry.group.id']}}",
              "patternType":"LITERAL"
            }]
          }
        }
      }
    status_code: 204

# - name: Grant Schema Registry user ResourceOwner on the kafka topic where schemas are stored
#   shell: |
#     curl -X POST {{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{schema_registry_ldap_user}}/roles/ResourceOwner/bindings \
#       -u "{{mds_super_user}}":"{{mds_super_user_password}}"  -H "Content-Type: application/json" {{certificate_args}} \
#       -d '{ "scope": {"clusters": {"kafka-cluster":"{{kafka_cluster_id}}"}}, "resourcePatterns": [{"resourceType": "Topic", "name": "{{schema_registry.properties['kafkastore.topic']}}" }]}'

- name: Grant Schema Registry user ResourceOwner on the kafka topic where schemas are stored
  uri:
    url: "{{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{schema_registry_ldap_user}}/roles/ResourceOwner/bindings"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "scope": {
          "clusters": {
            "kafka-cluster": "{{kafka_cluster_id}}"}},
            "resourcePatterns": [{
              "resourceType":"Topic",
              "name": "{{schema_registry.properties['kafkastore.topic']}}",
              "patternType":"LITERAL"
            }]
          }
        }
      }
    status_code: 204
