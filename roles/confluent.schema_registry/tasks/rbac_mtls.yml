---
- set_fact:
    certificate_args: ""
  when: not mds_ssl_enabled|bool

- set_fact:
    certificate_args: "--cacert {{schema_registry_ca_cert_path}}"
  when: mds_ssl_enabled|bool and not mds_ssl_mutual_auth_enabled

- set_fact:
    certificate_args: "--cacert {{schema_registry_ca_cert_path}} --key {{schema_registry_key_path}} --cert {{schema_registry_cert_path}}"
  when: mds_ssl_enabled|bool and mds_ssl_mutual_auth_enabled

- name: Grant Schema Registry user the role SecurityAdmin on the Schema Registry cluster.
  delegate_facts: true
  shell: |
    curl -X POST {{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:8090/security/1.0/principals/User:{{principal_name}}/roles/SecurityAdmin \
      -H "accept: application/json" -H "Authorization: Bearer {{rbac_token}}" -H "Content-Type: application/json" {{certificate_args}} \
      -d '{"clusters":{"kafka-cluster": "{{cluster_id}}", "schema-registry-cluster": "{{schema_registry.properties['schema.registry.group.id']}}"}}"'

- name: Grant Schema Registry user ResourceOwner on the group that Schema Registry nodes use to coordinate across the cluster
  delegate_facts: true
  shell: |
    curl -X POST {{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:8090/security/1.0/principals/User:{{principal_name}}/roles/ResourceOwner/bindings \
      -H "accept: application/json" -H "Authorization: Bearer {{rbac_token}}" -H "Content-Type: application/json" {{certificate_args}} \
      -d '{"scope":{"clusters":{"kafka-cluster": "{{cluster_id}}"}}, "resourcePatterns":[{"resourceType":"Group","name": "{{schema_registry.properties['schema.registry.group.id']}}","patternType":"LITERAL"}]}'

- name: Grant Schema Registry user ResourceOwner on the kafka topic where schemas are stored
  delegate_facts: true
  shell: |
    curl -X POST {{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:8090/security/1.0/principals/User:{{principal_name}}/roles/ResourceOwner/bindings \
      -H "accept: application/json" -H "Authorization: Bearer {{rbac_token}}"  -H "Content-Type: application/json" {{certificate_args}} \
      -d '{ "scope": {"clusters": {"kafka-cluster":"{{cluster_id}}"}}, "resourcePatterns": [{"resourceType": "Topic", "name": "{{schema_registry.properties['kafkastore.topic']}}" }]}'
