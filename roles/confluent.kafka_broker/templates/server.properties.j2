# Maintained by Ansible
zookeeper.connect={% for host in groups['zookeeper'] %}{% if loop.index > 1%},{% endif %}{{ host }}:{{zookeeper.properties.clientPort}}{% endfor %}

log.dirs={% for logdir in kafka_broker.datadir %}{% if loop.index > 1%},{% endif %}{{ logdir }}{% endfor %}

broker.id={{ broker_id | default(groups.kafka_broker.index(inventory_hostname) + 1)}}

{% for key, value in kafka_broker.properties.items() %}
{{key}}={{value}}
{% endfor %}

listeners={{kafka_broker_internal_listener_name}}://:{{kafka_broker_internal_listener_port}},{{kafka_broker_external_listener_name}}://:{{kafka_broker_external_listener_port}}
listener.security.protocol.map={{kafka_broker_internal_listener_name}}:{{kafka_broker_internal_listener_security_protocol}},{{kafka_broker_external_listener_name}}:{{kafka_broker_external_listener_security_protocol}}

## Inter Broker Listener Configuration
inter.broker.listener.name={{kafka_broker_internal_listener_name}}
{% if kafka_broker_internal_listener_sasl_protocol|upper != 'NONE' %}
sasl.mechanism.inter.broker.protocol={{kafka_broker_internal_listener_sasl_protocol|upper}}
{% endif %}
{% if kafka_broker_sasl_enabled_mechanisms|length > 0 %}
sasl.enabled.mechanisms={% for mechanism in kafka_broker_sasl_enabled_mechanisms %}{% if loop.index > 1%},{% endif %}{{ mechanism|upper }}{% endfor %}

{% endif %}
{% if kafka_broker_internal_listener_sasl_protocol|lower == 'kerberos' or kafka_broker_external_listener_sasl_protocol|lower == 'kerberos' %}
sasl.kerberos.service.name={{kerberos_kafka_broker_primary}}
{% endif %}
{% with %}
{% set listener_name = kafka_broker_internal_listener_name %}
{% set listener_ssl_enabled = kafka_broker_internal_listener_ssl_enabled %}
{% set listener_ssl_mutual_auth_enabled = kafka_broker_internal_listener_ssl_mutual_auth_enabled %}
{% set listener_sasl_protocol = kafka_broker_internal_listener_sasl_protocol %}
{% include 'listener.j2' %}
{% endwith %}

## External Client Listener Configuration
{% with %}
{% set listener_name = kafka_broker_external_listener_name %}
{% set listener_ssl_enabled = kafka_broker_external_listener_ssl_enabled %}
{% set listener_ssl_mutual_auth_enabled = kafka_broker_external_listener_ssl_mutual_auth_enabled %}
{% set listener_sasl_protocol = kafka_broker_external_listener_sasl_protocol %}
{% include 'listener.j2' %}
{% endwith %}

## Metrics Reporter Configuration
confluent.metrics.reporter.security.protocol={{kafka_broker_external_listener_security_protocol}}
{% if kafka_broker_external_listener_ssl_enabled|bool %}
confluent.metrics.reporter.ssl.truststore.location={{truststore_path}}
confluent.metrics.reporter.ssl.truststore.password={{truststore_storepass}}
{% if kafka_broker_external_listener_ssl_mutual_auth_enabled|bool %}
confluent.metrics.reporter.ssl.keystore.location={{keystore_path}}
confluent.metrics.reporter.ssl.keystore.password={{keystore_storepass}}
confluent.metrics.reporter.ssl.key.password={{keystore_keypass}}
{% endif %}
{% endif %}
{% if kafka_broker_external_listener_sasl_protocol|upper == 'PLAIN' %}
confluent.metrics.reporter.sasl.mechanism=PLAIN
confluent.metrics.reporter.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="client" password="client-secret";
{% endif %}
{% if kafka_broker_external_listener_sasl_protocol|lower == 'kerberos' %}
confluent.metrics.reporter.sasl.mechanism=GSSAPI
confluent.metrics.reporter.sasl.kerberos.service.name={{kerberos_kafka_broker_primary}}
confluent.metrics.reporter.sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required \
   useKeyTab=true \
   storeKey=true \
   keyTab="{{kerberos.keytab_dir}}/{{kafka_broker_kerberos_keytab_path | basename}}" \
   principal="{{kafka_broker_kerberos_principal}}";
{% endif %}
