# Maintained by Ansible
zookeeper.connect={% for host in groups['zookeeper'] %}{% if loop.index > 1%},{% endif %}{{ host }}:{{zookeeper.properties.clientPort}}{% endfor %}

log.dirs={% for logdir in kafka_broker.datadir %}{% if loop.index > 1%},{% endif %}{{ logdir }}{% endfor %}

broker.id={{ broker_id | default(groups.kafka_broker.index(inventory_hostname) + 1)}}

{% for key, value in kafka_broker.properties.items() %}
{{key}}={{value}}
{% endfor %}

listeners={{security_protocol}}://:{{kafka_port}}

security.inter.broker.protocol={{security_protocol}}
{% if ssl_enabled|bool %}

ssl.client.auth=required
ssl.truststore.location=/var/ssl/private/client.truststore.jks
ssl.truststore.password={{host_truststore_storepass}}
ssl.keystore.location=/var/ssl/private/client.keystore.jks
ssl.keystore.password={{host_keystore_storepass}}
ssl.key.password={{host_cert_password}}
{% endif %}
{% if sasl_protocol == 'plain' %}
sasl.enabled.mechanisms=PLAIN
sasl.mechanism.inter.broker.protocol=PLAIN
listener.name.sasl_ssl.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="broker" password="broker-secret" user_broker="broker-secret" user_client="client-secret";
{% endif %}
{% if sasl_protocol == 'kerberos' %}
sasl.enabled.mechanisms=GSSAPI
sasl.mechanism.inter.broker.protocol=GSSAPI
sasl.kerberos.service.name={{kerberos_kafka_broker_primary}}
{% endif %}

confluent.metrics.reporter.security.protocol={{security_protocol}}
{% if ssl_enabled|bool %}
confluent.metrics.reporter.ssl.truststore.location=/var/ssl/private/client.truststore.jks
confluent.metrics.reporter.ssl.truststore.password={{host_truststore_storepass}}
confluent.metrics.reporter.ssl.keystore.location=/var/ssl/private/client.keystore.jks
confluent.metrics.reporter.ssl.keystore.password={{host_keystore_storepass}}
confluent.metrics.reporter.ssl.key.password={{host_cert_password}}
{% endif %}
{% if sasl_protocol == 'plain' %}
confluent.metrics.reporter.sasl.mechanism=PLAIN
confluent.metrics.reporter.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="client" password="client-secret";
{% endif %}
{% if sasl_protocol == 'kerberos' %}
confluent.metrics.reporter.sasl.mechanism=GSSAPI
confluent.metrics.reporter.sasl.kerberos.service.name={{kerberos_kafka_broker_primary}}
confluent.metrics.reporter.sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required \
   useKeyTab=true \
   storeKey=true \
   keyTab="{{kerberos.keytab_dir}}/client-{{inventory_hostname}}.keytab" \
   principal="client/{{inventory_hostname}}@{{kerberos.realm|upper()}}";
{% endif %}
