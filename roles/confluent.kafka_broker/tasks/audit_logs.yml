# Need to get the destination cluster id.... which wont exist when mds is getting stood up...

# - shell: |
#     confluent cluster describe --url http://kafka-broker1:8090 | grep 'Confluent Resource Name' | cut -d ':' -f2 | cut -c2-
#   register: destination_cluster_id
#
# - debug: var=destination_cluster_id


- name: Get Kafka Cluster Id of Destination Cluster
  uri:
    url: http://kafka-broker1:8090/v1/metadata/id
    status_code: 200
  register: destination_cluster_id

- debug:
    msg: "{{destination_cluster_id.json.id}}"



# Then create these role bindings
# confluent iam rolebinding create --principal User:<audit-log-writer> --role DeveloperWrite --resource Topic:confluent-audit-log-events --prefix --kafka-cluster-id <kafka-destination-cluster-id>
# confluent iam rolebinding create --principal User:<audit-log-admin> --role ResourceOwner --resource Topic:confluent-audit-log-events --prefix --kafka-cluster-id <kafka-destination-cluster-id>




# confluent iam rolebinding create --principal User:<audit-log-admin> --role ResourceOwner --resource Topic:confluent-audit-log-events --prefix --kafka-cluster-id <kafka-destination-cluster-id>
- name: Grant Audit Logs Principal ResourceOwner on confluent-audit-log-events Prefixed Topics
  uri:
    url: "{{mds_bootstrap_server_urls.split(',')[0]}}/security/1.0/principals/User:{{ sasl_plain_users.admin.principal }}/roles/ResourceOwner/bindings"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "scope": {
          "clusters": {
            "kafka-cluster":"{{destination_cluster_id.json.id}}"
          }
        },
        "resourcePatterns": [{
          "resourceType": "Topic",
          "name": "confluent-audit-log-events",
          "patternType":"PREFIXED"
        }]
      }
    status_code: 204

# confluent iam rolebinding create --principal User:<audit-log-writer> --role DeveloperWrite --resource Topic:confluent-audit-log-events --prefix --kafka-cluster-id <kafka-destination-cluster-id>
- name: Grant Audit Logs Principal DeveloperWrite on confluent-audit-log-events Prefixed Topics
  uri:
    url: "{{mds_bootstrap_server_urls.split(',')[0]}}/security/1.0/principals/User:{{ sasl_plain_users.admin.principal }}/roles/DeveloperWrite/bindings"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "scope": {
          "clusters": {
            "kafka-cluster":"{{destination_cluster_id.json.id}}"
          }
        },
        "resourcePatterns": [{
          "resourceType": "Topic",
          "name": "confluent-audit-log-events",
          "patternType":"PREFIXED"
        }]
      }
    status_code: 204

- fail:

        # audit_logs_destination_enabled: true
        # audit_logs_destination_bootstrap_servers: kafka-broker1:9091,kafka-broker2:9091,kafka-broker3:9091
        # audit_logs_destination_listener:
        #   ssl_enabled: false
        #   ssl_mutual_auth_enabled: false
        #   sasl_protocol: plain
