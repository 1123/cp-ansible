# Maintained by Ansible

# KSQL Configuration
listeners={{ksql_http_protocol}}://0.0.0.0:{{ksql_listener_port}}
{% if ksql_ssl_enabled|bool %}
#ssl.client.auth=false
ssl.truststore.location=/var/ssl/private/client.truststore.jks
ssl.truststore.password={{host_truststore_storepass}}
ssl.keystore.location=/var/ssl/private/client.keystore.jks
ssl.keystore.password={{host_keystore_storepass}}
ssl.key.password={{host_cert_password}}
{% endif %}

# Kafka Broker Configuration
bootstrap.servers={% for host in groups['kafka_broker'] %}{% if loop.index > 1%},{% endif %}{{ host }}:{{kafka_port}}{% endfor %}

ksql.streams.security.protocol={{security_protocol}}
{% if kafka_broker_ssl_enabled|bool %}
ksql.streams.ssl.truststore.location=/var/ssl/private/client.truststore.jks
ksql.streams.ssl.truststore.password={{host_truststore_storepass}}
ksql.streams.ssl.keystore.location=/var/ssl/private/client.keystore.jks
ksql.streams.ssl.keystore.password={{host_keystore_storepass}}
ksql.streams.ssl.key.password={{host_cert_password}}
{% endif %}
{% if sasl_protocol == 'plain' %}
ksql.streams.sasl.mechanism=PLAIN
ksql.streams.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="client" password="client-secret";
{% endif %}
{% if sasl_protocol == 'kerberos' %}
ksql.streams.sasl.mechanism=GSSAPI
ksql.streams.sasl.kerberos.service.name={{kerberos_kafka_broker_primary}}
ksql.streams.sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required \
   useKeyTab=true \
   storeKey=true \
   keyTab="{{kerberos.keytab_dir}}/{{ksql_kerberos_keytab_path | basename}}" \
   principal="{{ksql_kerberos_principal}}";
{% endif %}

{% for key, value in ksql.properties.items() %}
{{key}}={{value}}
{% endfor %}

{% set schema_registries = groups.get('schema_registry', []) %}
{% if schema_registries %}
# Schema Registry Configuration
ksql.schema.registry.url={% for host in groups['schema_registry'] %}{% if loop.index > 1%},{% endif %}{{ schema_registry_http_protocol }}://{{ host }}:{{ schema_registry_listener_port }}{% endfor %}

{% if schema_registry_ssl_enabled|bool %}
ksql.schema.registry.ssl.truststore.location=/var/ssl/private/client.truststore.jks
ksql.schema.registry.ssl.truststore.password={{host_truststore_storepass}}
ksql.schema.registry.ssl.keystore.location=/var/ssl/private/client.keystore.jks
ksql.schema.registry.ssl.keystore.password={{host_keystore_storepass}}
ksql.schema.registry.ssl.key.password={{host_cert_password}}
{% endif %}
{% endif %}

# Monitoring Configuration
confluent.monitoring.interceptor.security.protocol={{security_protocol}}
{% if kafka_broker_ssl_enabled|bool %}
confluent.monitoring.interceptor.ssl.truststore.location=/var/ssl/private/client.truststore.jks
confluent.monitoring.interceptor.ssl.truststore.password={{host_truststore_storepass}}
confluent.monitoring.interceptor.ssl.keystore.location=/var/ssl/private/client.keystore.jks
confluent.monitoring.interceptor.ssl.keystore.password={{host_keystore_storepass}}
confluent.monitoring.interceptor.ssl.key.password={{host_cert_password}}
{% endif %}
{% if sasl_protocol == 'plain' %}
confluent.monitoring.interceptor.sasl.mechanism=PLAIN
confluent.monitoring.interceptor.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="client" password="client-secret";
{% endif %}
{% if sasl_protocol == 'kerberos' %}
confluent.monitoring.interceptor.sasl.mechanism=GSSAPI
confluent.monitoring.interceptor.sasl.kerberos.service.name={{kerberos_kafka_broker_primary}}
confluent.monitoring.interceptor.sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required \
   useKeyTab=true \
   storeKey=true \
   keyTab="{{kerberos.keytab_dir}}/{{ksql_kerberos_keytab_path | basename}}" \
   principal="{{ksql_kerberos_principal}}";
{% endif %}
