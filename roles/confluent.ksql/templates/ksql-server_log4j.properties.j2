#
# Licensed under the Confluent Community License (the "License"); you may not use
# this file except in compliance with the License.  You may obtain a copy of the
# License at
#
# http://www.confluent.io/confluent-community-license
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OF ANY KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations under the License.
#

# this is a sample log4j config that will roll log files
# lines with `File=` may need to be updated for your environment

log4j.rootLogger=INFO, stdout, ksqlAppender

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n

# appenders
log4j.appender.ksqlAppender=org.apache.log4j.RollingFileAppender
log4j.appender.ksqlAppender.File={{ksql.appender_log_path}}{{ksql.appender_log_name}}
log4j.appender.ksqlAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.ksqlAppender.layout.ConversionPattern=[%d] %p %m (%c:%L)%n
log4j.appender.ksqlAppender.MaxFileSize={{ksql.appender_log_file_size}}
log4j.appender.ksqlAppender.MaxBackupIndex={{ksql.appender_max_log_files}}
log4j.appender.ksqlAppender.append=true

log4j.appender.streamsAppender=org.apache.log4j.RollingFileAppender
log4j.appender.streamsAppender.File={{ksql.appender_log_path}}{{ksql.streams_appender_log_name}}
log4j.appender.streamsAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.streamsAppender.layout.ConversionPattern=[%d] %p %m (%c:%L)%n
log4j.appender.streamsAppender.MaxFileSize={{ksql.streams_appender_log_file_size}}
log4j.appender.streamsAppender.MaxBackupIndex={{ksql.streams_appender_max_log_files}}
log4j.appender.streamsAppender.append=true

log4j.appender.kafkaAppender=org.apache.log4j.RollingFileAppender
log4j.appender.kafkaAppender.File={{ksql.appender_log_path}}{{ksql.kafka_appender_log_name}}
log4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c:%L)%n
log4j.appender.kafkaAppender.MaxFileSize={{ksql.kafka_appender_log_file_size}}
log4j.appender.kafkaAppender.MaxBackupIndex={{ksql.kafka_appender_max_log_files}}
log4j.appender.kafkaAppender.append=true

{% if ksql_log_streaming_enabled | bool %}
# Log Streaming Configuration
log4j.appender.kafka_appender=org.apache.kafka.log4jappender.KafkaLog4jAppender
log4j.appender.kafka_appender.layout=io.confluent.common.logging.log4j.StructuredJsonLayout
log4j.appender.kafka_appender.BrokerList={% for host in groups['kafka_broker'] %}{% if loop.index > 1%},{% endif %}{{ host }}:{{kafka_broker_listeners[kafka_broker_inter_broker_listener_name]['port']}}{% endfor %}
log4j.appender.kafka_appender.Topic={{ksql_processing_log}}
log4j.logger.processing=ERROR, kafka_appender

# Security Configuration for Log Streaming
{% set config_prefix = '' %}
{% set listener = kafka_broker_listeners[kafka_broker_inter_broker_listener_name] %}
{% set truststore_path = ksql_truststore_path %}
{% set truststore_storepass = ksql_truststore_storepass %}
{% set keystore_path = ksql_keystore_path %}
{% set keystore_storepass = ksql_keystore_storepass %}
{% set keystore_keypass = ksql_keystore_keypass %}
{% set sasl_plain_username = sasl_plain_users.ksql.principal %}
{% set sasl_plain_password = sasl_plain_users.ksql.password %}
{% set sasl_scram_username = sasl_scram_users.ksql.principal %}
{% set sasl_scram_password = sasl_scram_users.ksql.password %}
{% set kerberos_keytab_path = ksql_kerberos_keytab_path %}
{% set kerberos_principal = ksql_kerberos_principal %}
{% set oauth_username = ksql_ldap_user %}
{% set oauth_password = ksql_ldap_password %}

{{config_prefix}}log4j.appender.kafka_appender.SecurityProtocol={{listener | kafka_protocol_defaults(sasl_protocol, ssl_enabled) }}
{% if listener['ssl_enabled'] | default(ssl_enabled) | bool %}
{{config_prefix}}log4j.appender.kafka_appender.SslTruststoreLocation={{truststore_path}}
{{config_prefix}}log4j.appender.kafka_appender.SslTruststorePassword={{truststore_storepass}}
{% if listener['ssl_mutual_auth_enabled'] | default(ssl_mutual_auth_enabled) | bool %}
{{config_prefix}}log4j.appender.kafka_appender.SslKeystoreLocation={{keystore_path}}
{{config_prefix}}log4j.appender.kafka_appender.SslKeystorePassword={{keystore_storepass}}
{{config_prefix}}log4j.appender.kafka_appender.SslKeyPassword={{keystore_keypass}}
{% if listener['pkcs12_enabled'] | default(pkcs12_enabled) | bool %}
{{config_prefix}}log4j.appender.kafka_appender.SslkeymanagerAlgorithm=PKIX
{{config_prefix}}log4j.appender.kafka_appender.SslTrustmanagerAlgorithm=PKIX
{{config_prefix}}log4j.appender.kafka_appender.SslKeystoreType=pkcs12
{{config_prefix}}log4j.appender.kafka_appender.SslTruststoreType=pkcs12
{% endif %}
{% endif %}
{% endif %}

{% if listener['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'PLAIN' %}
{{config_prefix}}log4j.appender.kafka_appender.SaslMechanism=PLAIN
{{config_prefix}}log4j.appender.kafka_appender.ClientJaasConf=org.apache.kafka.common.security.plain.PlainLoginModule required \
   username="{{sasl_plain_username}}" password="{{sasl_plain_password}}";
{% endif %}
{% if listener['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'SCRAM-SHA-256' %}
{{config_prefix}}log4j.appender.kafka_appender.SaslMechanism=SCRAM-SHA-256
{{config_prefix}}log4j.appender.kafka_appender.ClientJaasConf=org.apache.kafka.common.security.scram.ScramLoginModule required \
   username="{{sasl_scram_username}}" password="{{sasl_scram_password}}";
{% endif %}
{% if listener['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'GSSAPI' %}
{{config_prefix}}log4j.appender.kafka_appender.SaslMechanism=GSSAPI
{{config_prefix}}log4j.appender.kafka_appender.SaslKerberosServiceName={{kerberos_kafka_broker_primary}}
{{config_prefix}}log4j.appender.kafka_appender.clientJaasConf=com.sun.security.auth.module.Krb5LoginModule required \
   useKeyTab=true storeKey=true keyTab="{{kerberos.keytab_dir}}/{{kerberos_keytab_path | basename}}" \
   principal="{{kerberos_principal}}" serviceName="{{kerberos_kafka_broker_primary}}";
{% endif %}
{% endif %}

# loggers
log4j.logger.org.apache.kafka.streams=INFO, streamsAppender
log4j.additivity.org.apache.kafka.streams=false

log4j.logger.kafka=ERROR, kafkaAppender
log4j.additivity.kafka=false

log4j.logger.org.apache.zookeeper=ERROR, kafkaAppender
log4j.additivity.org.apache.zookeeper=false

log4j.logger.org.apache.kafka=ERROR, kafkaAppender
log4j.additivity.org.apache.kafka=false

log4j.logger.org.I0Itec.zkclient=ERROR, kafkaAppender
log4j.additivity.org.I0Itec.zkclient=false

log4j.logger.processing=ERROR, kafka_appender
log4j.additivity.processing=false
