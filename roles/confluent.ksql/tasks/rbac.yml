---
- name: RBAC Setup Tasks
  include_tasks: ../../tasks/rbac_setup.yml
  vars:
    user: "{{ksql_user}}"
    group: "{{ksql_group}}"

- set_fact:
    certificate_args: ""
  when: not mds_ssl_enabled|bool

- set_fact:
    certificate_args: "--cacert {{ksql_ca_cert_path}}"
  when: mds_ssl_enabled|bool and not mds_ssl_mutual_auth_enabled|bool

- set_fact:
    certificate_args: "--cacert {{ksql_ca_cert_path}} --key {{ksql_key_path}} --cert {{ksql_cert_path}}"
  when: mds_ssl_enabled|bool and mds_ssl_mutual_auth_enabled|bool

- set_fact:
    mds_broker_host_name: "{{groups['kafka_broker'][0]}}"
  when: not external_mds_enabled|bool

- set_fact:
    mds_broker_host_name: "{{mds_bootstrap_server_urls.split(',')[0]| urlsplit('hostname')}}"
  when: external_mds_enabled|bool

- set_fact:
    mds_port: "{{mds_bootstrap_server_urls.split(',')[0]| urlsplit('port')}}"
  when: external_mds_enabled|bool

- name: Grant role System Admin to Additional KSQL Super Users
  shell: |
    curl -X POST {{mds_http_protocol}}://{{mds_broker_host_name}}:{{mds_port}}/security/1.0/principals/User:{{item}}/roles/SystemAdmin \
      -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
      -d '{"clusters":{"kafka-cluster":"{{kafka_cluster_id}}","ksql-cluster":"{{ksql.properties['ksql.service.id']}}"}}'
  loop: "{{ksql_additional_system_admins}}"

- name: Grant ResourceOwner of KSQL Cluster on KSQL User
  shell: |
    curl -X POST {{mds_http_protocol}}://{{mds_broker_host_name}}:{{mds_port}}/security/1.0/principals/User:{{ksql_ldap_user}}/roles/ResourceOwner/bindings \
      -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
      -d '{ "scope": {"clusters": {"kafka-cluster":"{{kafka_cluster_id}}","ksql-cluster":"{{ksql.properties['ksql.service.id']}}"}},"resourcePatterns":[{"resourceType": "KsqlCluster","name": "ksql-cluster"}]}'
  
- name: Grant ksql user the ResourceOwner role with three resourcePatterns
  shell: |
    curl -X POST {{mds_http_protocol}}://{{mds_broker_host_name}}:{{mds_port}}/security/1.0/principals/User:{{ksql_ldap_user}}/roles/ResourceOwner/bindings \
      -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
      -d '{ "scope": {"clusters": {"kafka-cluster":"{{kafka_cluster_id}}"}}, "resourcePatterns": [{"resourceType": "Topic", "name": "_confluent-ksql-{{ksql.properties['ksql.service.id']}}_command_topic","patternType":"LITERAL"},{"resourceType":"Topic","name":"{{ksql.properties['ksql.service.id']}}-ksql_processing_log","patternType":"LITERAL"},{"resourceType":"Group","name":"_confluent-ksql-{{ksql.properties['ksql.service.id']}}","patternType":"PREFIXED"}]}'
  
- name: Grant ksql user the DeveloperWrite role on resourceType TransactionalId
  shell: |
    curl -X POST {{mds_http_protocol}}://{{mds_broker_host_name}}:{{mds_port}}/security/1.0/principals/User:{{ksql_ldap_user}}/roles/DeveloperWrite/bindings \
      -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
      -d '{ "scope": {"clusters": {"kafka-cluster":"{{kafka_cluster_id}}"}}, "resourcePatterns": [{"resourceType": "TransactionalId", "name": "{{ksql.properties['ksql.service.id']}}","patternType":"LITERAL"}]}'

# TODO find a way to get around hardcoding this sr cluster id
- name: Grant ksql user the DeveloperRead role on resourceType Subject in Schema Registry Cluster
  shell: |
    curl -X POST {{mds_http_protocol}}://{{mds_broker_host_name}}:{{mds_port}}/security/1.0/principals/User:{{ksql_ldap_user}}/roles/DeveloperRead/bindings \
      -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
      -d '{ "scope": {"clusters": {"kafka-cluster":"{{kafka_cluster_id}}","schema-registry-cluster":"schema-registry"}}, "resourcePatterns": [{"resourceType": "Subject", "name": "_confluent-ksql-{{ksql.properties['ksql.service.id']}}","patternType":"PREFIXED"}]}'
  when: "'schema_registry' in groups"
