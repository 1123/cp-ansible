zookeeper:
  properties:
    clientPort: 2181
kerberos:
  keytab_dir: /etc/security/keytabs
confluent:
  package_version: 5.3.0-1
  repo_version: 5.3
  support:
    customer_id: anonymous
    metrics_enabled: true

jolokia_jar_path: /opt/jolokia/jolokia.jar
zookeeper_jolokia_port: 7770
kafka_broker_jolokia_port: 7771
schema_registry_jolokia_port: 7772
kafka_connect_jolokia_port: 7773
ksql_jolokia_port: 7774
kafka_rest_jolokia_port: 7775

open_file_limit: 500000

## Schema Registry logging configuration

## log4j configuration

schema_registry_appender_log_path: /var/log/confluent/schema-registry/
schema_registry_appender_log_name: schema-registry.log
schema_registry_appender_max_log_files: 10
scheam_registry_appender_log_file_size: 100MB

## Garbage Collection logging

schema_registry_gclog_path: /var/log/confluent/schema-registry/
schema_registry_gclog_name: schema-registry-gc.log
schema_registry_gclog_max_log_files: 10
schema_registry_gclog_log_file_size: 100M


## Connect logging configuration

## log4j configuration

connect_distributed_appender_log_path: /var/log/kafka/
connect_distributed_appender_log_name: connect-distributed.log
connect_distributed_appender_max_log_files: 10
connect_distributed_appender_log_file_size: 100MB

## Garbage Collection logging

connect_distributed_gclog_path: /var/log/kafka/
connect_distributed_gclog_name: connect-distributed-gc.log
connect_distributed_gclog_max_log_files: 10
connect_distributed_gclog_log_file_size: 100M

## KSQL logging configuration

## log4j configuration

ksql_appender_log_path: /var/log/confluent/ksql/
ksql_appender_log_name: ksql.log
ksql_appender_max_log_files: 10
ksql_appender_log_file_size: 100MB

ksql_streams_appender_log_path: /var/log/confluent/ksql/
ksql_streams_appender_log_name: ksql-streams.log
ksql_streams_appender_max_log_files: 10
ksql_streams_appender_log_file_size: 100MB

ksql_kafka_appender_log_path: /var/log/confluent/ksql/
ksql_kafka_appender_log_name: ksql-kafka.log
ksql_kafka_appender_max_log_files: 10
ksql_kafka_appender_log_file_size: 100MB

## Garbage Collection logging

ksql_gclog_path: /var/log/confluent/ksql/
ksql_gclog_name: ksql-gc-test.log
ksql_gclog_max_log_files: 10
ksql_gclog_log_file_size: 100M

## Rest proxy logging configuration

## log4j configuration

rest_proxy_appender_log_path: /var/log/kafka-rest/
rest_proxy_appender_log_name: rest-proxy.log
rest_proxy_appender_max_log_files: 10
rest_proxy_appender_log_file_size: 100MB

## Garbage Collection logging

rest_proxy_gclog_path: /var/log/kafka-rest/
rest_proxy_gclog_name: rest-proxy-gc.log
rest_proxy_gclog_max_log_files: 10
rest_proxy_gclog_log_file_size: 100M

## Control Center logging configuration 

## log4j configuration

control_center_c3appender_log_path: /var/log/confluent/control-center/
control_center_c3appender_log_name: control-center.log
control_center_c3appender_max_log_files: 10
control_center_c3appender_log_file_size: 100MB

control_center_streamsappender_log_path: /var/log/confluent/control-center/
control_center_streamsappender_log_name: control-center-streams.log
control_center_streamsappender_max_log_files: 10
control_center_streamsappender_log_file_size: 100MB

control_center_kafkaappender_log_path: /var/log/confluent/control-center/
control_center_kafkaappender_log_name: control-center-kafka.log
control_center_kafkaappender_max_log_files: 10
control_center_kafkaappender_log_file_size: 100MB

## Garbage Collection logging

control_center_gclog_path: /var/log/confluent/control-center/
control_center_gclog_name: control-center-gc.log
control_center_gclog_max_log_files: 10
control_center_gclog_log_file_size: 100M

kerberos_configure: true

jolokia_enabled: true

jmxexporter_enabled: false
jmxexporter_install_path: /opt/prometheus/
jmxexporter_jar_path: /opt/prometheus/jmx_prometheus_javaagent.jar
kafka_broker_jmxexporter_port: 8080

rbac_enabled: false
confluent_server_enable_: "{{ true if rbac_enabled|bool else false }}"

# Other options: kerberos, plain
sasl_protocol: none

ssl_enabled: false
ssl_mutual_auth_enabled: false

kafka_broker_ssl_enabled: "{{ ssl_enabled }}"
kafka_broker_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
kafka_port: 9092
# Should default to 'PLAINTEXT'
kafka_broker_security_protocol: >-
  {{ 'SASL_SSL' if (sasl_protocol == 'kerberos' or sasl_protocol == 'plain') and kafka_broker_ssl_enabled|bool
  else 'SASL_PLAINTEXT' if (sasl_protocol == 'kerberos' or sasl_protocol == 'plain') and not kafka_broker_ssl_enabled|bool
  else 'SSL' if kafka_broker_ssl_enabled|bool and sasl_protocol == 'none'
  else 'PLAINTEXT' }}

ssl_provided_keystore_and_truststore: false
ssl_custom_certs: false
# With self_signed on and ssl_enabled off, self_signed var should not get honored
self_signed: "{{ false if ssl_provided_keystore_and_truststore|bool or ssl_custom_certs|bool else true }}"
ssl_self_signed_ca_cert_filename: snakeoil-ca-1.crt
ssl_self_signed_ca_key_filename: snakeoil-ca-1.key
ssl_self_signed_ca_password: capassword123
regenerate_ca: true

truststore_storepass: "{{ ssl_truststore_password if ssl_provided_keystore_and_truststore|bool else 'confluenttruststorepass'}}"
truststore_path: /var/ssl/private/client.truststore.jks
keystore_path: /var/ssl/private/client.keystore.jks
keystore_storepass: "{{ ssl_keystore_store_password if ssl_provided_keystore_and_truststore|bool else 'confluentkeystorestorepass'}}"
keystore_keypass: "{{ ssl_keystore_key_password if ssl_provided_keystore_and_truststore|bool else keystore_storepass }}"

certs_updated: false

schema_registry_ssl_enabled: "{{ssl_enabled}}"
schema_registry_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
schema_registry_http_protocol: "{{ 'https' if schema_registry_ssl_enabled|bool else 'http' }}"
schema_registry_listener_port: 8081

kafka_rest_ssl_enabled: "{{ssl_enabled}}"
kafka_rest_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
kafka_rest_http_protocol: "{{ 'https' if kafka_rest_ssl_enabled|bool else 'http' }}"
kafka_rest_port: 8082

kafka_connect_ssl_enabled: "{{ssl_enabled}}"
kafka_connect_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
kafka_connect_http_protocol: "{{ 'https' if kafka_connect_ssl_enabled|bool else 'http' }}"
kafka_connect_rest_port: 8083

ksql_ssl_enabled: "{{ssl_enabled}}"
ksql_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
ksql_http_protocol: "{{ 'https' if ksql_ssl_enabled|bool else 'http' }}"
ksql_listener_port: 8088

control_center_ssl_enabled: "{{ssl_enabled}}"
control_center_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
control_center_http_protocol: "{{ 'https' if control_center_ssl_enabled|bool else 'http' }}"
control_center_port: 9021
