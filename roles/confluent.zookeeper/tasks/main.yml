# Install Packages
- name: Install the Zookeeper Packages
  yum:
    name: "{{item}}-{{confluent.package_version}}"
    state: latest
  loop: "{{zookeeper_packages}}"
  when: ansible_os_family == "RedHat"

- name: Install the Zookeeper Packages
  apt:
    name: "{{item}}={{confluent.package_version}}"
    update_cache: yes
  loop: "{{zookeeper_packages}}"
  when: ansible_os_family == "Debian"

# Configure environment
- name: zookeeper create group
  group:
    name: "{{zookeeper.group}}"
- name: zookeeper create user
  user:
    name: "{{zookeeper.user}}"
    comment: "Zookeeper User"
    system: yes
    group: "{{zookeeper.group}}"
- name: Change keytabs ownership
  file:
    path: "{{kerberos.keytab_dir}}"
    group: "{{zookeeper.group}}"
    mode: '650'
    recurse: yes
- name: zookeeper myid file
  template:
    src: myid.j2
    dest: "{{zookeeper.properties.dataDir}}/myid"
    mode: 0555
    owner: "{{zookeeper.user}}"
    group: "{{zookeeper.group}}"
- name: zookeeper create config
  template:
    src: zookeeper.properties.j2
    dest: "{{zookeeper.config_file}}"
    mode: 0400
    owner: "{{zookeeper.user}}"
    group: "{{zookeeper.group}}"
  register: zookeeper_config
  notify:
    - restart zookeeper
- name: zookeeper Jaas config
  template:
    src: zookeeper_jaas.conf.j2
    dest: "{{zookeeper_jaas_file}}"
    mode: 0640
    owner: "{{zookeeper.user}}"
    group: "{{zookeeper.group}}"
  when: security_mode == "kerberos" or security_mode == "kerberos_ssl" or security_mode == "kerberos_ssl_customcerts"
  notify:
    - restart zookeeper

- name: Update Service File with Environment Variables
  lineinfile:
    path: "{{zookeeper.systemd_file}}"
    regexp: ".*{{item.key}}.*"
    line: "Environment='{{item.key}}={{item.value}}'"
    insertafter: "ExecStart=.*"
  with_dict: "{{ zookeeper_service_environment_overrides }}"
  notify:
    - reload systemd
    - restart zookeeper

- name: Update Service File with Service Overrides
  lineinfile:
    path: "{{zookeeper.systemd_file}}"
    regexp: "{{item.key}}.*"
    line: "{{item.key}}={{item.value}}"
    insertafter: "ExecStart=.*"
  with_dict: "{{ zookeeper_service_overrides }}"
  notify:
    - reload systemd
    - restart zookeeper

- meta: flush_handlers

- name: Start Zookeeper Service
  systemd:
    name: "{{zookeeper.service_name}}"
    enabled: "{{zookeeper.systemd.enabled}}"
    state: "{{zookeeper.systemd.state}}"
