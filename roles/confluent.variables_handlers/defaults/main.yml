kerberos:
  keytab_dir: /etc/security/keytabs

confluent_repo_version: 5.3
confluent_package_version: 5.3.0
confluent_full_package_version: "{{ confluent_package_version + '-1' }}"
confluent_package_redhat_suffix: "{{ '-' + confluent_full_package_version if confluent_full_package_version != '' else ''}}"
confluent_package_debian_suffix: "{{ '=' + confluent_full_package_version if confluent_full_package_version != '' else ''}}"

confluent:
  support:
    customer_id: anonymous
    metrics_enabled: true

jolokia_enabled: true
jolokia_jar_path: /opt/jolokia/jolokia.jar
zookeeper_jolokia_port: 7770
kafka_broker_jolokia_port: 7771
schema_registry_jolokia_port: 7772
kafka_connect_jolokia_port: 7773
ksql_jolokia_port: 7774
kafka_rest_jolokia_port: 7775

jmxexporter_enabled: false
jmxexporter_install_path: /opt/prometheus/
jmxexporter_jar_path: /opt/prometheus/jmx_prometheus_javaagent.jar
kafka_broker_jmxexporter_port: 8080

fips_enabled: false
fips_jar_path: /usr/share/java/kafka/bc-fips-1.0.1.jar
fips_provider_class: org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider
pkcs12_enabled: "{{ true if fips_enabled|bool else false }}"

custom_log4j: false

open_file_limit: 500000

kerberos_configure: true

rbac_enabled: false
confluent_server_enabled: "{{ true if rbac_enabled|bool else false }}"

# Other options: kerberos, plain
sasl_protocol: none

ssl_enabled: false
ssl_mutual_auth_enabled: false
certs_updated: false

ssl_provided_keystore_and_truststore: false
ssl_custom_certs: false
# With self_signed on and ssl_enabled off, self_signed var should not get honored
self_signed: "{{ false if ssl_provided_keystore_and_truststore|bool or ssl_custom_certs|bool else true }}"
ssl_self_signed_ca_cert_filename: snakeoil-ca-1.crt
ssl_self_signed_ca_key_filename: snakeoil-ca-1.key
ssl_self_signed_ca_password: capassword123
regenerate_ca: true

kafka_port: 9092
kafka_broker_ssl_enabled: "{{ ssl_enabled }}"
kafka_broker_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
# Should default to 'PLAINTEXT'
kafka_broker_security_protocol: >-
  {{ 'SASL_SSL' if (sasl_protocol == 'kerberos' or sasl_protocol == 'plain') and kafka_broker_ssl_enabled|bool
  else 'SASL_PLAINTEXT' if (sasl_protocol == 'kerberos' or sasl_protocol == 'plain') and not kafka_broker_ssl_enabled|bool
  else 'SSL' if kafka_broker_ssl_enabled|bool and sasl_protocol == 'none'
  else 'PLAINTEXT' }}
kafka_broker_truststore_path: "/var/ssl/private/kafka_broker.truststore.jks"
kafka_broker_keystore_path: "/var/ssl/private/kafka_broker.keystore.jks"
kafka_broker_truststore_storepass: "{{ ssl_truststore_password if ssl_provided_keystore_and_truststore|bool else 'confluenttruststorepass'}}"
kafka_broker_keystore_storepass: "{{ ssl_keystore_store_password if ssl_provided_keystore_and_truststore|bool else 'confluentkeystorestorepass'}}"
kafka_broker_keystore_keypass: "{{ ssl_keystore_key_password if ssl_provided_keystore_and_truststore|bool else kafka_broker_keystore_storepass }}"
kafka_broker:
  log4j_file: /etc/kafka/kafka_server_log4j.properties
  jaas_file: /etc/kafka/kafka_server_jaas.conf
kafka_broker_schema_validation_enabled: false

schema_registry_listener_port: 8081
schema_registry_ssl_enabled: "{{ssl_enabled}}"
schema_registry_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
schema_registry_http_protocol: "{{ 'https' if schema_registry_ssl_enabled|bool else 'http' }}"
schema_registry_truststore_path: "/var/ssl/private/schema_registry.truststore.jks"
schema_registry_keystore_path: "/var/ssl/private/schema_registry.keystore.jks"
schema_registry_truststore_storepass: "{{ ssl_truststore_password if ssl_provided_keystore_and_truststore|bool else 'confluenttruststorepass'}}"
schema_registry_keystore_storepass: "{{ ssl_keystore_store_password if ssl_provided_keystore_and_truststore|bool else 'confluentkeystorestorepass'}}"
schema_registry_keystore_keypass: "{{ ssl_keystore_key_password if ssl_provided_keystore_and_truststore|bool else schema_registry_keystore_storepass }}"
schema_registry:
  log4j_file: /etc/schema-registry/schema_registry_log4j.properties


kafka_rest_port: 8082
kafka_rest_ssl_enabled: "{{ssl_enabled}}"
kafka_rest_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
kafka_rest_http_protocol: "{{ 'https' if kafka_rest_ssl_enabled|bool else 'http' }}"
kafka_rest_truststore_path: "/var/ssl/private/kafka_rest.truststore.jks"
kafka_rest_keystore_path: "/var/ssl/private/kafka_rest.keystore.jks"
kafka_rest_truststore_storepass: "{{ ssl_truststore_password if ssl_provided_keystore_and_truststore|bool else 'confluenttruststorepass'}}"
kafka_rest_keystore_storepass: "{{ ssl_keystore_store_password if ssl_provided_keystore_and_truststore|bool else 'confluentkeystorestorepass'}}"
kafka_rest_keystore_keypass: "{{ ssl_keystore_key_password if ssl_provided_keystore_and_truststore|bool else kafka_rest_keystore_storepass }}"
kafka_rest:
  log4j_file: /etc/kafka-rest/kafka-rest_log4j.properties

kafka_connect_rest_port: 8083
kafka_connect_ssl_enabled: "{{ssl_enabled}}"
kafka_connect_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
kafka_connect_http_protocol: "{{ 'https' if kafka_connect_ssl_enabled|bool else 'http' }}"
kafka_connect_truststore_path: "/var/ssl/private/kafka_connect.truststore.jks"
kafka_connect_keystore_path: "/var/ssl/private/kafka_connect.keystore.jks"
kafka_connect_truststore_storepass: "{{ ssl_truststore_password if ssl_provided_keystore_and_truststore|bool else 'confluenttruststorepass'}}"
kafka_connect_keystore_storepass: "{{ ssl_keystore_store_password if ssl_provided_keystore_and_truststore|bool else 'confluentkeystorestorepass'}}"
kafka_connect_keystore_keypass: "{{ ssl_keystore_key_password if ssl_provided_keystore_and_truststore|bool else kafka_connect_keystore_storepass }}"
kafka_connect:
  log4j_file: /etc/kafka/connect_distributed_log4j.properties

ksql_listener_port: 8088
ksql_ssl_enabled: "{{ssl_enabled}}"
ksql_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
ksql_http_protocol: "{{ 'https' if ksql_ssl_enabled|bool else 'http' }}"
ksql_truststore_path: "/var/ssl/private/ksql.truststore.jks"
ksql_keystore_path: "/var/ssl/private/ksql.keystore.jks"
ksql_truststore_storepass: "{{ ssl_truststore_password if ssl_provided_keystore_and_truststore|bool else 'confluenttruststorepass'}}"
ksql_keystore_storepass: "{{ ssl_keystore_store_password if ssl_provided_keystore_and_truststore|bool else 'confluentkeystorestorepass'}}"
ksql_keystore_keypass: "{{ ssl_keystore_key_password if ssl_provided_keystore_and_truststore|bool else ksql_keystore_storepass }}"
ksql:
  log4j_file: /etc/ksql/ksql-server_log4j.properties
  jaas_file: /etc/ksql/ksql-server_jaas.conf

control_center_port: 9021
control_center_ssl_enabled: "{{ssl_enabled}}"
control_center_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
control_center_http_protocol: "{{ 'https' if control_center_ssl_enabled|bool else 'http' }}"
control_center_truststore_path: "/var/ssl/private/control_center.truststore.jks"
control_center_keystore_path: "/var/ssl/private/control_center.keystore.jks"
control_center_truststore_storepass: "{{ ssl_truststore_password if ssl_provided_keystore_and_truststore|bool else 'confluenttruststorepass'}}"
control_center_keystore_storepass: "{{ ssl_keystore_store_password if ssl_provided_keystore_and_truststore|bool else 'confluentkeystorestorepass'}}"
control_center_keystore_keypass: "{{ ssl_keystore_key_password if ssl_provided_keystore_and_truststore|bool else control_center_keystore_storepass }}"
control_center:
  log4j_file: /etc/confluent-control-center/control-center_log4j.properties

zookeeper:
  properties:
    clientPort: 2181
  log4j_file: /etc/kafka/zookeeper_log4j.properties
  jaas_file: /etc/kafka/zookeeper_jaas.conf
