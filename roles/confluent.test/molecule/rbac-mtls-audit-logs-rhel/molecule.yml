### rbac-mds-mtls-custom-rhel
##
##  Tests Multi Cluster RBAC with mtls auth on the MDS and second cluster
##
---
driver:
  name: docker
platforms:
  - name: ldap1
    hostname: ldap1.confluent
    groups:
      - ldap_server
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  # MDS Zookeeper and Kafka
  - name: mds-zookeeper1
    hostname: mds-zookeeper1.confluent
    groups:
      - zookeeper
      - mds
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: mds-kafka-broker1
    hostname: mds-kafka-broker1.confluent
    groups:
      - kafka_broker
      - mds
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: mds-kafka-broker2
    hostname: mds-kafka-broker2.confluent
    groups:
      - kafka_broker
      - mds
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  # Cluster 2 goups, groupnames will be changed during converge phase
  - name: zookeeper1
    hostname: zookeeper1.confluent
    groups:
      - zookeeper2
      - cluster2
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker2
      - cluster2
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker2
    hostname: kafka-broker2.confluent
    groups:
      - kafka_broker2
      - cluster2
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker3
    hostname: kafka-broker3.confluent
    groups:
      - kafka_broker2
      - cluster2
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  # - name: schema-registry1
  #   hostname: schema-registry1.confluent
  #   groups:
  #     - schema_registry2
  #     - cluster2
  #   image: geerlingguy/docker-centos7-ansible
  #   dockerfile: ../Dockerfile.j2
  #   command: ""
  #   volumes:
  #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
  #   privileged: true
  #   networks:
  #     - name: confluent
  # - name: kafka-rest1
  #   hostname: kafka-rest1.confluent
  #   groups:
  #     - kafka_rest2
  #     - cluster2
  #   image: geerlingguy/docker-centos7-ansible
  #   dockerfile: ../Dockerfile.j2
  #   command: ""
  #   volumes:
  #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
  #   privileged: true
  #   networks:
  #     - name: confluent
  # - name: kafka-connect1
  #   hostname: kafka-connect1.confluent
  #   groups:
  #     - kafka_connect2
  #     - cluster2
  #   image: geerlingguy/docker-centos7-ansible
  #   dockerfile: ../Dockerfile.j2
  #   command: ""
  #   volumes:
  #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
  #   privileged: true
  #   networks:
  #     - name: confluent
  # - name: ksql1
  #   hostname: ksql1.confluent
  #   groups:
  #     - ksql2
  #     - cluster2
  #   image: geerlingguy/docker-centos7-ansible
  #   dockerfile: ../Dockerfile.j2
  #   command: ""
  #   volumes:
  #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
  #   privileged: true
  #   networks:
  #     - name: confluent
  # - name: control-center1
  #   hostname: control-center1.confluent
  #   groups:
  #     - control_center2
  #     - cluster2
  #   image: geerlingguy/docker-centos7-ansible
  #   dockerfile: ../Dockerfile.j2
  #   command: ""
  #   volumes:
  #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
  #   privileged: true
  #   published_ports:
  #     - "9021:9021"
  #   networks:
  #     - name: confluent
provisioner:
  name: ansible
  config_options:
    defaults:
      hash_behaviour: merge
  playbooks:
    converge: ../multi_rbac_converge.yml
  inventory:
    group_vars:
      all:
        scenario_name: rbac-mtls-audit-logs-rhel

        sasl_protocol: plain

        rbac_enabled: true

        kafka_broker_custom_listeners:
          client_listener:
            name: CLIENT
            port: 9093

        mds_super_user: mds
        mds_super_user_password: password

        kafka_broker_ldap_user: mds
        kafka_broker_ldap_password: password

        schema_registry_ldap_user: mds
        schema_registry_ldap_password: password

        kafka_connect_ldap_user: mds
        kafka_connect_ldap_password: password

        ksql_ldap_user: mds
        ksql_ldap_password: password

        kafka_rest_ldap_user: mds
        kafka_rest_ldap_password: password

        control_center_ldap_user: mds
        control_center_ldap_password: password

        rbac_component_additional_system_admins:
          - user1

      mds:
        audit_logs_destination_enabled: true
        audit_logs_destination_bootstrap_servers: kafka-broker1:9091,kafka-broker2:9091,kafka-broker3:9091
        audit_logs_destination_listener:
          ssl_enabled: false
          ssl_mutual_auth_enabled: false
          sasl_protocol: plain

        kafka_broker_custom_properties:
          ldap.java.naming.factory.initial: com.sun.jndi.ldap.LdapCtxFactory
          ldap.com.sun.jndi.ldap.read.timeout: 3000
          ldap.java.naming.provider.url: ldap://ldap1:389
          ldap.java.naming.security.principal: uid=mds,OU=rbac,DC=example,DC=com
          ldap.java.naming.security.credentials: password
          ldap.java.naming.security.authentication: simple
          ldap.user.search.base: OU=rbac,DC=example,DC=com
          ldap.group.search.base: OU=rbac,DC=example,DC=com
          ldap.user.name.attribute: uid
          ldap.user.memberof.attribute.pattern: CN=(.*),OU=rbac,DC=example,DC=com
          ldap.group.name.attribute: cn
          ldap.group.member.attribute.pattern: CN=(.*),OU=rbac,DC=example,DC=com
          ldap.user.object.class: account
          # Audit logs
          # confluent.security.event.logger.destination.admin.bootstrap.servers: kafka-broker1:9091,kafka-broker2:9091,kafka-broker3:9091
          # confluent.security.event.logger.destination.admin.security.protocol: SASL_PLAINTEXT
          # confluent.security.event.logger.destination.admin.sasl.mechanism: PLAIN
          # confluent.security.event.logger.destination.admin.sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username='admin' password='admin-secret';
          # confluent.security.event.logger.exporter.kafka.topic.create: 'false'
          # confluent.security.event.logger.exporter.kafka.bootstrap.servers: kafka-broker1:9091,kafka-broker2:9091,kafka-broker3:9091
          # confluent.security.event.logger.exporter.kafka.security.protocol: SASL_PLAINTEXT
          # confluent.security.event.logger.exporter.kafka.sasl.mechanism: PLAIN
          # confluent.security.event.logger.exporter.kafka.sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";

      cluster2:
        create_mds_certs: false
        token_services_public_pem_file: "generated_ssl_files/public.pem"
        token_services_private_pem_file: "generated_ssl_files/tokenKeypair.pem"

        external_mds_enabled: true
        kafka_broker_rest_ssl_enabled: false
        mds_broker_bootstrap_servers: mds-kafka-broker1:9091,mds-kafka-broker2:9091
        mds_bootstrap_server_urls: http://mds-kafka-broker1:8090,http://mds-kafka-broker2:8090
        mds_broker_listener:
          ssl_enabled: false
          ssl_mutual_auth_enabled: false
          sasl_protocol: plain

      ldap_server:
        ldaps_enabled: false
        # ldaps_custom_certs: true
        # ssl_custom_certs: true
        # ssl_ca_cert_filepath: "{{scenario_name}}/generated_ssl_files/ca.crt"
        # ssl_signed_cert_filepath: "{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-ca1-signed.crt"
        # ssl_key_filepath: "{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-key.pem"

        ldap_admin_password: ldppassword

        ldap_rbac_group: rbac
        ldap_dc: example
        ldap_dc_extension: com

        ldap_users:
          - username: "{{mds_super_user}}"
            password: "{{mds_super_user_password}}"
            uid: 9993
            guid: 93
          - username: user1
            password: user1p
            uid: 9992
            guid: 92

verifier:
  name: ansible
lint: |
  set -e
  yamllint -c ../../.yamllint ../..
scenario:
  test_sequence:
    - lint
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    # - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy
