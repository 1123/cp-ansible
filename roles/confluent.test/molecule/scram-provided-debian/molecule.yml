---
driver:
  name: docker
platforms:
  - name: zookeeper1
    hostname: zookeeper1.confluent
    groups:
      - zookeeper
    image: geerlingguy/docker-debian9-ansible
    dockerfile: ../Dockerfile-debian.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker
    image: geerlingguy/docker-debian9-ansible
    dockerfile: ../Dockerfile-debian.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: schema-registry1
    hostname: schema-registry1.confluent
    groups:
      - schema_registry
    image: geerlingguy/docker-debian9-ansible
    dockerfile: ../Dockerfile-debian.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-rest1
    hostname: kafka-rest1.confluent
    groups:
      - kafka_rest
    image: geerlingguy/docker-debian9-ansible
    dockerfile: ../Dockerfile-debian.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-connect1
    hostname: kafka-connect1.confluent
    groups:
      - kafka_connect
    image: geerlingguy/docker-debian9-ansible
    dockerfile: ../Dockerfile-debian.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ksql1
    hostname: ksql1.confluent
    groups:
      - ksql
    image: geerlingguy/docker-debian9-ansible
    dockerfile: ../Dockerfile-debian.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: control-center1
    hostname: control-center1.confluent
    groups:
      - control_center
    image: geerlingguy/docker-debian9-ansible
    dockerfile: ../Dockerfile-debian.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    published_ports:
      - "9021:9021"
    networks:
      - name: confluent
provisioner:
  name: ansible
  config_options:
    defaults:
      hash_behaviour: merge
  playbooks:
    prepare: ../certificates.yml
    converge: ../../../../all.yml
  inventory:
    group_vars:
      all:
        scenario_name: scram-provided-debian

        sasl_protocol: scram

        ssl_enabled: true

        ssl_provided_keystore_and_truststore: true
        ssl_keystore_filepath: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}.keystore.jks"
        ssl_keystore_key_password: keystorepass
        ssl_keystore_store_password: keystorepass
        ssl_truststore_filepath: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/truststore.jks"
        ssl_truststore_password: truststorepass

        # ssl_custom_certs: true
        # ssl_ca_cert_filepath: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/ca.crt"
        # ssl_signed_cert_filepath: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-ca1-signed.crt"
        # ssl_key_filepath: "roles/confluent.test/molecule/{{scenario_name}}/generated_ssl_files/{{inventory_hostname}}-key.pem"
        # ssl_key_password: keypass

verifier:
  name: ansible
scenario:
  test_sequence:
    - lint
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    # - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy
