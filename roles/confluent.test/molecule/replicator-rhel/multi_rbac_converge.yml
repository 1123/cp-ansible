---
- name: Remove the Zookeeper and Kafka Broker Groups from Inventory
  hosts: zookeeper:kafka_broker:schema_registry:kafka_rest
  gather_facts: false
  tasks:
    - name: "Change {{item}} Group Name in Inventory File for MDS"
      lineinfile:
        path: "{{inventory_dir}}/ansible_inventory.yml"
        regexp: "{{item}}:"
        line: "{{item}}_mds:"
      delegate_to: 127.0.0.1
      run_once: true
      loop:
        - zookeeper
        - kafka_broker
        - schema_registry
        - kafka_rest

    - name: "Change {{item}} Group Name in Inventory File for cluster2"
      lineinfile:
        path: "{{inventory_dir}}/ansible_inventory.yml"
        regexp: "{{item}}2:"
        line: "{{item}}:"
      delegate_to: 127.0.0.1
      run_once: true
      loop:
        - zookeeper
        - kafka_broker
        - schema_registry
        - kafka_rest
        - kafka_connect
        - ksql
        - control_center

    - name: Refresh Inventory
      meta: refresh_inventory

- name: Converge
  import_playbook: ../../../../all.yml

#  we now have two clusters

#  create topic on cluster one to consume from 
# - name: Create kafka client properties file
#   shell: |
#     echo "security.protocol=SSL
#     ssl.truststore.location=/var/ssl/private/kafka_broker.truststore.jks
#     ssl.truststore.password=confluenttruststorepass
#     ssl.keystore.location=/var/ssl/private/kafka_broker.keystore.jks
#     ssl.keystore.password=confluentkeystorestorepass
#     ssl.key.password=confluentkeystorestorepass" > /tmp/config.props
#   run_once: true

- name: Add Topics and Create data for Replication 
  hosts: kafka_broker
  gather_facts: false
  tasks:
    - name: Create Schema
      uri:
        url: http://mds-schema-registry1:8081/subjects/users-value/versions
        method: POST
        headers:
          Content-Type: application/vnd.schemaregistry.v1+json
        body_format: json
        body: '{ "schema": "[ { \"type\":\"record\", \"name\":\"user\", \"fields\": [ {\"name\":\"userid\",\"type\":\"long\"}, {\"name\":\"username\",\"type\":\"string\"} ]} ]" }'
        status_code: 200
      run_once: true
    
    - name: Create topic with schema validation enabled on Cluster1
      shell: |
        kafka-topics --create --topic test-replicator-source \
          --bootstrap-server mds-kafka-broker1:9092 \
          --replication-factor 2 --partitions 2  \
          --config confluent.value.schema.validation=true \
      run_once: true
      register: output

    - debug:
        msg: "{{output}}"

    - name: Write to topic
      uri:
        url: http://mds-kafka-rest1:8082/topics/test-replicator-source
        method: POST
        headers:
          Content-Type: application/vnd.kafka.avro.v2+json
          Accept: application/vnd.kafka.v2+json
        body_format: json
        body: '{"value_schema_id": 1, "records": [{"value": {"user":{"userid": 1, "username": "Bunny Smith"}}}]}'
        status_code: 200
      run_once: true

    - name: Create Schema
      uri:
        url: http://schema-registry1:8081/subjects/users-value/versions
        method: POST
        headers:
          Content-Type: application/vnd.schemaregistry.v1+json
        body_format: json
        body: '{ "schema": "[ { \"type\":\"record\", \"name\":\"user\", \"fields\": [ {\"name\":\"userid\",\"type\":\"long\"}, {\"name\":\"username\",\"type\":\"string\"} ]} ]" }'
        status_code: 200
      run_once: true

    #  create topic on cluster two, to produce too
    - name: Create topic with schema validation enabled on Cluster2
      shell: |
        kafka-topics --create --topic test-replicator-destination \
          --bootstrap-server kafka-broker1:9092 \
          --replication-factor 2 --partitions 2  \
          --config confluent.value.schema.validation=true \
      run_once: true
      register: output2

    - debug:
        msg: "{{output2}}"
    
    

#  change Group name on all components to group_name2
#  Change group name on Replicator from Replicator2 to Replicator 

#  Converge to create replicator cluster and start it up 

# - name: Converge
#   import_playbook: ../../../all.yml