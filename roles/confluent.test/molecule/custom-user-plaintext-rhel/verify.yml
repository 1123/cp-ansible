---
- name: Verify - Zookeeper User Change and custom logging path
  hosts: zookeeper1-kafka-broker1
  gather_facts: false
  tasks:
    - name: Set Zookeeper user to new user
      set_fact:
        zookeeper_user: zk-test-user

    - name: Set Zookeeper Group
      set_fact:
        zookeeper_group: confluent-custom

    - name: Create Zookeeper Group
      group:
        name: "{{zookeeper_group}}" 

    - name: Create Zookeeper User
      user:
        name: "{{zookeeper_user}}"
        comment: "Zookeeper User"
        system: true
        group: "{{zookeeper_group}}"

    - name: Update Broker group to match Zookeeper group
      user:
        name: broker-test
        comment: "Broker User"
        system: true
        group: "{{zookeeper_group}}"
    
    - name: Create Kafka Log Directory
      file:
        path: "{{kafka_broker.appender_log_path}}"
        state: directory
        group: "{{zookeeper_group}}"
        owner: broker-test
        mode: 0770

    - name: Create Zookeeper Log Directory
      file:
        path: "{{zookeeper.log_path}}"
        state: directory
        recurse: true
        group: "{{zookeeper_group}}"
        owner: "{{zookeeper_user}}"
        mode: 0770

    - name: Restart Service
      systemd:
        daemon_reload: true
        name: "{{zookeeper_service_name}}"
        state: restarted

    - import_role:
        name: confluent.zookeeper
        tasks_from: health_check.yml

    - name: Restart Service
      systemd:
        daemon_reload: true
        name: "{{kafka_broker_service_name}}"
        state: restarted

    - name: Wait for Under Replicated Partitions on Broker
      include_tasks: ../../../../tasks/wait_for_urp.yml
    
    - import_role:
        name: confluent.test
        tasks_from: check_directory.yml
      vars:
        custom_path: /kafka/logs/zookeeper/
        full_user: zk-test-user
        group: confluent-custom

    - import_role:
        name: confluent.test
        tasks_from: check_directory.yml
      vars:
          custom_path: /kafka/logs/kafka/
          full_user: broker-test
          group: confluent-custom
          
- name: Verify - Schema Registry custom user and custom group and custom logging directory and log file presence 
  hosts: schema_registry
  gather_facts: no
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_user.yml
      vars:
        user: sr-cust+
        expected_value: sr-cust+

    - import_role:
        name: confluent.test
        tasks_from: check_group.yml
      vars:
        full_user: sr-custom
        group: sr-custom-group
    
    - import_role:
        name: confluent.test
        tasks_from: check_directory.yml
      vars:
        custom_path: /kafka/logs/schemaregistry/
        full_user: sr-custom
        group: sr-custom-group

    - import_role:
        name: confluent.test
        tasks_from: file_exists.yml
      vars:
        file_name: schema-registry.log
        custom_path: /kafka/logs/schemaregistry/

- name: Verify - Kafka Connect custom user and custom group and custom logging directory and log file presence
  hosts: kafka_connect
  gather_facts: no
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_user.yml
      vars:
        user: connect+
        expected_value: connect+

    - import_role:
        name: confluent.test
        tasks_from: check_group.yml
      vars:
        full_user: connect-custom
        group: connect-custom-group

    - import_role:
        name: confluent.test
        tasks_from: check_directory.yml
      vars:
        custom_path: /kafka/logs/kafkaconnect/
        full_user: connect-custom
        group: connect-custom-group

    - import_role:
        name: confluent.test
        tasks_from: file_exists.yml
      vars:
        file_name: connect-distributed.log
        custom_path: /kafka/logs/kafkaconnect/

- name: Verify - Rest Proxy custom user and custom group and custom logging directory and log file presence
  hosts: kafka_rest
  gather_facts: no
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_user.yml
      vars:
        user: rest-cu+
        expected_value: rest-cu+

    - import_role:
        name: confluent.test
        tasks_from: check_group.yml
      vars:
        full_user: rest-custom
        group: rest-custom-group

    - import_role:
        name: confluent.test
        tasks_from: check_directory.yml
      vars:
        custom_path: /kafka/logs/kafkarest/
        full_user: rest-custom
        group: rest-custom-group

    - import_role:
        name: confluent.test
        tasks_from: file_exists.yml
      vars:
        file_name: rest-proxy.log
        custom_path: /kafka/logs/kafkarest/

- name: Verify - KSQL custom user and custom Group and custom logging directory and log file presence
  hosts: ksql
  gather_facts: no
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_user.yml
      vars:
        user: ksql-cu+
        expected_value: ksql-cu+

    - import_role:
        name: confluent.test
        tasks_from: check_group.yml
      vars:
        full_user: ksql-custom
        group: ksql-custom-group
        expected_value: ksql-custom-group

    - import_role:
        name: confluent.test
        tasks_from: check_directory.yml
      vars:
        custom_path: /kafka/logs/ksql/
        group: ksql-custom-group
        expected_value: ksql-custom-group

    - import_role:
        name: confluent.test
        tasks_from: file_exists.yml
      vars:
        file_name: ksql.log
        custom_path: /kafka/logs/ksql/

    - import_role:
        name: confluent.test
        tasks_from: file_exists.yml
      vars:
        file_name: ksql-kafka.log
        custom_path: /kafka/logs/ksql/
      
    - import_role:
        name: confluent.test
        tasks_from: file_exists.yml
      vars:
        file_name: ksql-streams.log
        custom_path: /kafka/logs/ksql/

- name: Verify - C3 custom user and custom Group and custom logging directory and log file presence
  hosts: control_center
  gather_facts: no
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_user.yml
      vars:
        user: c3-cust+
        expected_value: c3-cust+

    - import_role:
        name: confluent.test
        tasks_from: check_group.yml
      vars:
        full_user: c3-custom
        group: c3-custom-group
        expected_value: c3-custom-group

    - import_role:
        name: confluent.test
        tasks_from: check_directory.yml
      vars:
        custom_path: /kafka/logs/controlcenter/
        group: c3-custom-group
        expected_value: c3-custom-group

    - import_role:
        name: confluent.test
        tasks_from: file_exists.yml
      vars:
        file_name: control-center-kafka.log
        custom_path: /kafka/logs/controlcenter/

    - import_role:
        name: confluent.test
        tasks_from: file_exists.yml
      vars:
        file_name: control-center.log
        custom_path: /kafka/logs/controlcenter/

    - import_role:
        name: confluent.test
        tasks_from: file_exists.yml
      vars:
        file_name: control-center-streams.log
        custom_path: /kafka/logs/controlcenter/