---
- name: RBAC Setup Tasks
  include_tasks: ../../tasks/rbac_setup.yml
  vars:
    user: "{{kafka_connect_user}}"
    group: "{{kafka_connect_group}}"

# - set_fact:
#     certificate_args: ""
#   when: not mds_ssl_enabled|bool
#
# - set_fact:
#     certificate_args: "--cacert {{kafka_connect_ca_cert_path}}"
#   when: mds_ssl_enabled|bool

# - name: Grant role System Admin to Additional Connect Super Users
#   shell: |
#     curl -X POST {{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{item}}/roles/SystemAdmin \
#       -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
#       -d '{"clusters":{"kafka-cluster":"{{kafka_cluster_id}}","connect-cluster":"{{kafka_connect.properties['group.id']}}"}}'
#   loop: "{{kafka_connect_additional_system_admins}}"

- name: Grant role System Admin to Additional Connect Super Users
  uri:
    url: "{{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{item}}/roles/SystemAdmin"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "clusters": {
          "kafka-cluster": "{{kafka_cluster_id}}",
          "schema-registry-cluster": "{{kafka_connect.properties['group.id']}}"
        }
      }
    status_code: 204
  loop: "{{kafka_connect_additional_system_admins}}"

# - name: Grant role Security Admin to Connect user
#   shell: |
#     curl -X POST {{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/SecurityAdmin \
#       -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
#       -d '{"clusters":{"kafka-cluster":"{{kafka_cluster_id}}","connect-cluster":"{{kafka_connect.properties['group.id']}}"}}'

- name: Grant role Security Admin to Connect user
  uri:
    url: "{{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/SecurityAdmin"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "clusters": {
          "kafka-cluster": "{{kafka_cluster_id}}",
          "connect-cluster": "{{kafka_connect.properties['group.id']}}"
        }
      }
    status_code: 204

# - name: Grant Connect user ResourceOwner on the group that Connect nodes use to coordinate across the cluster
#   shell: |
#     curl -X POST {{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/ResourceOwner/bindings \
#       -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
#       -d '{"scope":{"clusters":{"kafka-cluster":"{{kafka_cluster_id}}"}},"resourcePatterns":[{"resourceType":"Group","name":"{{kafka_connect.properties['group.id']}}","patternType":"LITERAL"}]}'

# - name: Grant Connect user ResourceOwner on the group that Connect nodes use to coordinate across the cluster
#   uri:
#     url: "{{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/ResourceOwner/bindings"
#     method: POST
#     validate_certs: false
#     force_basic_auth: true
#     url_username: "{{mds_super_user}}"
#     url_password: "{{mds_super_user_password}}"
#     headers:
#       Content-Type: application/json
#     body_format: json
#     body: >
#       {
#         "scope": {
#           "clusters": {
#             "kafka-cluster":"{{kafka_cluster_id}}"}},
#             "resourcePatterns": [{
#               "resourceType":"Group",
#               "name":"{{kafka_connect.properties['group.id']}}",
#               "patternType":"LITERAL"
#             }]
#           }
#         }
#       }
#     status_code: 204

# - name: Grant Connect ResourceOwner on the Config topic where Connect configs are stored
#   shell: |
#     curl -X POST {{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/ResourceOwner/bindings \
#       -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
#       -d '{"scope":{"clusters":{"kafka-cluster":"{{kafka_cluster_id}}"}},"resourcePatterns":[{"resourceType":"Topic","name":"{{kafka_connect.properties['config.storage.topic']}}","patternType":"LITERAL"}]}'

- name: Grant Connect ResourceOwner on Connect Topics and Group
  uri:
    url: "{{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/ResourceOwner/bindings"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "scope": {
          "clusters": {
            "kafka-cluster":"{{kafka_cluster_id}}"}},
            "resourcePatterns": [
              {
                "resourceType":"Group",
                "name":"{{kafka_connect.properties['group.id']}}",
                "patternType":"LITERAL"
              },
              {
                "resourceType":"Topic",
                "name":"{{kafka_connect.properties['config.storage.topic']}}",
                "patternType":"LITERAL"
              },
              {
                "resourceType":"Topic",
                "name":"{{kafka_connect.properties['offset.storage.topic']}}",
                "patternType":"LITERAL"
              },
              {
                "resourceType":"Topic",
                "name":"{{kafka_connect.properties['status.storage.topic']}}",
                "patternType":"LITERAL"
              }
            ]
          }
        }
      }
    status_code: 204

# - name: Grant Connect ResourceOwner on the offset storage topic
#   shell: |
#     curl -X POST {{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/ResourceOwner/bindings \
#       -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
#       -d '{"scope":{"clusters":{"kafka-cluster":"{{kafka_cluster_id}}"}},"resourcePatterns":[{"resourceType":"Topic","name":"{{kafka_connect.properties['offset.storage.topic']}}","patternType":"LITERAL"}]}'

# - name: Grant Connect ResourceOwner on the offset storage topic
#   uri:
#     url: "{{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/ResourceOwner/bindings"
#     method: POST
#     validate_certs: false
#     force_basic_auth: true
#     url_username: "{{mds_super_user}}"
#     url_password: "{{mds_super_user_password}}"
#     headers:
#       Content-Type: application/json
#     body_format: json
#     body: >
#       {
#         "scope": {
#           "clusters":{"kafka-cluster":"{{kafka_cluster_id}}"}},
#           "resourcePatterns": [{
#             "resourceType":"Topic",
#             "name":"{{kafka_connect.properties['offset.storage.topic']}}",
#             "patternType":"LITERAL"
#           }]
#         }
#       }
#     status_code: 204

# - name: Grant Connect ResourceOwner on the offset status topic
#   shell: |
#     curl -X POST {{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/ResourceOwner/bindings \
#       -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
#       -d '{"scope":{"clusters":{"kafka-cluster":"{{kafka_cluster_id}}"}},"resourcePatterns":[{"resourceType":"Topic","name":"{{kafka_connect.properties['status.storage.topic']}}","patternType":"LITERAL"}]}'

# - name: Grant Connect ResourceOwner on the offset status topic
#   uri:
#     url: "{{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/ResourceOwner/bindings"
#     method: POST
#     validate_certs: false
#     force_basic_auth: true
#     url_username: "{{mds_super_user}}"
#     url_password: "{{mds_super_user_password}}"
#     headers:
#       Content-Type: application/json
#     body_format: json
#     body: >
#       {
#         "scope": {
#           "clusters":{"kafka-cluster":"{{kafka_cluster_id}}"}},
#           "resourcePatterns": [{
#             "resourceType":"Topic",
#             "name":"{{kafka_connect.properties['status.storage.topic']}}",
#             "patternType":"LITERAL"
#           }]
#         }
#       }
#     status_code: 204

# TODO the move hardcoded vars into vars
# - name: Grant Connect user ResourceOwner on the secrets store group
#   delegate_facts: true
#   shell: |
#     curl -X POST {{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/ResourceOwner/bindings \
#       -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
#       -d '{"scope":{"clusters":{"kafka-cluster":"{{kafka_cluster_id}}"}},"resourcePatterns":[{"resourceType":"Group","name":"secret-registry","patternType":"LITERAL"}]}'
#   when: kafka_connect_secret_registry_enabled|bool

- name: Grant Connect ResourceOwner on Connect Topics and Group
  uri:
    url: "{{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/ResourceOwner/bindings"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "scope": {
          "clusters": {
            "kafka-cluster":"{{kafka_cluster_id}}"}},
            "resourcePatterns": [
              {
                "resourceType":"Group",
                "name":"secret-registry",
                "patternType":"LITERAL"
              },
              {
                "resourceType":"Topic",
                "name":"_confluent-secrets",
                "patternType":"LITERAL"
              }
            ]
          }
        }
      }
    status_code: 204
  when: kafka_connect_secret_registry_enabled|bool

# # TODO the move hardcoded vars into vars
# - name: Grant Connect ResourceOwner on the secrets topic
#   delegate_facts: true
#   shell: |
#     curl -X POST {{mds_http_protocol}}://{{ groups['kafka_broker'][0] }}:{{mds_port}}/security/1.0/principals/User:{{kafka_connect_ldap_user}}/roles/ResourceOwner/bindings \
#       -u "{{mds_super_user}}":"{{mds_super_user_password}}" -H "Content-Type: application/json" {{certificate_args}} \
#       -d '{"scope":{"clusters":{"kafka-cluster":"{{kafka_cluster_id}}"}},"resourcePatterns":[{"resourceType":"Topic","name":"_confluent-secrets","patternType":"LITERAL"}]}'
#   when: kafka_connect_secret_registry_enabled|bool
