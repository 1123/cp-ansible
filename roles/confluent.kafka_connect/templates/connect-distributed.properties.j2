# Maintained by Ansible

{% for key, value in kafka_connect_final_properties|dictsort %}
{{key}}={{value}}
{% endfor %}

# Kafka Broker Configuration

{% set config_prefix = '' %}
{% set listener = kafka_broker_listeners[kafka_connect_kafka_listener_name] %}
{% set truststore_path = kafka_connect_truststore_path %}
{% set truststore_storepass = kafka_connect_truststore_storepass %}
{% set keystore_path = kafka_connect_keystore_path %}
{% set keystore_storepass = kafka_connect_keystore_storepass %}
{% set keystore_keypass = kafka_connect_keystore_keypass %}
{% set sasl_plain_username = sasl_plain_users.kafka_connect.principal %}
{% set sasl_plain_password = sasl_plain_users.kafka_connect.password %}
{% set sasl_scram_username = sasl_scram_users.kafka_connect.principal %}
{% set sasl_scram_password = sasl_scram_users.kafka_connect.password %}
{% set kerberos_keytab_path = kafka_connect_kerberos_keytab_path %}
{% set kerberos_principal = kafka_connect_kerberos_principal %}
{% set oauth_username = kafka_connect_ldap_user %}
{% set oauth_password = kafka_connect_ldap_password %}
{% include 'roles/confluent.kafka_broker/templates/kafka_client.j2' %}



# Connect Producer Configuration {# Producer should not have jaas config, set in worker properties #}


producer.security.protocol={{kafka_broker_listeners[kafka_connect_kafka_listener_name] | kafka_protocol_defaults(sasl_protocol, ssl_enabled) }}
{% if kafka_broker_listeners[kafka_connect_kafka_listener_name]['ssl_enabled'] | default(ssl_enabled) | bool %}
producer.ssl.truststore.location={{kafka_connect_truststore_path}}
producer.ssl.truststore.password={{kafka_connect_truststore_storepass}}
{% if kafka_broker_listeners[kafka_connect_kafka_listener_name]['ssl_mutual_auth_enabled'] | default(ssl_mutual_auth_enabled) | bool %}
producer.ssl.keystore.location={{kafka_connect_keystore_path}}
producer.ssl.keystore.password={{kafka_connect_keystore_storepass}}
producer.ssl.key.password={{kafka_connect_keystore_keypass}}
{% endif %}
{% endif %}
{% if kafka_broker_listeners[kafka_connect_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'PLAIN' %}
producer.sasl.mechanism=PLAIN
{% endif %}
{% if kafka_broker_listeners[kafka_connect_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'GSSAPI' %}
producer.sasl.mechanism=GSSAPI
producer.sasl.kerberos.service.name={{kerberos_kafka_broker_primary}}
{% endif %}
{% if kafka_broker_listeners[kafka_connect_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'SCRAM-SHA-256' %}
producer.sasl.mechanism=SCRAM-SHA-256
{% endif %}
{% if kafka_broker_listeners[kafka_connect_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'OAUTHBEARER' %}
producer.sasl.mechanism=OAUTHBEARER
producer.sasl.login.callback.handler.class=io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
{% endif %}

# Connect Consumer Configuration {# Consumers should not have jaas config, set in worker properties #}


consumer.security.protocol={{kafka_broker_listeners[kafka_connect_kafka_listener_name] | kafka_protocol_defaults(sasl_protocol, ssl_enabled) }}
{% if kafka_broker_listeners[kafka_connect_kafka_listener_name]['ssl_enabled'] | default(ssl_enabled) | bool %}
consumer.ssl.truststore.location={{kafka_connect_truststore_path}}
consumer.ssl.truststore.password={{kafka_connect_truststore_storepass}}
{% if kafka_broker_listeners[kafka_connect_kafka_listener_name]['ssl_mutual_auth_enabled'] | default(ssl_mutual_auth_enabled) | bool %}
consumer.ssl.keystore.location={{kafka_connect_keystore_path}}
consumer.ssl.keystore.password={{kafka_connect_keystore_storepass}}
consumer.ssl.key.password={{kafka_connect_keystore_keypass}}
{% endif %}
{% endif %}
{% if kafka_broker_listeners[kafka_connect_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'PLAIN' %}
consumer.sasl.mechanism=PLAIN
{% endif %}
{% if kafka_broker_listeners[kafka_connect_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'GSSAPI' %}
consumer.sasl.mechanism=GSSAPI
consumer.sasl.kerberos.service.name={{kerberos_kafka_broker_primary}}
{% endif %}
{% if kafka_broker_listeners[kafka_connect_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'SCRAM-SHA-256' %}
consumer.sasl.mechanism=SCRAM-SHA-256
{% endif %}
{% if kafka_broker_listeners[kafka_connect_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'OAUTHBEARER' %}
consumer.sasl.mechanism=OAUTHBEARER
consumer.sasl.login.callback.handler.class=io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
{% endif %}

# Producer Monitoring Configuration

{% set config_prefix = 'producer.confluent.monitoring.interceptor.' %}
{% include 'roles/confluent.kafka_broker/templates/kafka_client.j2' %}

# Consumer Monitoring Configuration

{% set config_prefix = 'consumer.confluent.monitoring.interceptor.' %}
{% include 'roles/confluent.kafka_broker/templates/kafka_client.j2' %}
